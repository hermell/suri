"""
Django settings for suriProject project.

Generated by 'django-admin startproject' using Django 1.9.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/

생성된 django 프로젝트에 대한 설정과 구성정보를 담은 파일
위 주소에 모든 설정사항 및 어떻게 동작하는지에 대한 설명이 있다.
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '35q3)nasnei2qv3oppyh7q4%u)53dz%y_k5k3d22w30(fy-797'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',  # 관리사이트
    'django.contrib.auth',  # 인증시스템
    'django.contrib.contenttypes',  # 컨텐트 타입들에 대한 프레임워크
    'django.contrib.sessions',  # 세션 프레임워크
    'django.contrib.messages',  # 메시징 프레임워크
    'django.contrib.staticfiles',  # html과 같은 정적파일 관리를 위한 프레임워크
    'sample',  # 테스트 용도의 App
    'user_app',  # 사용자 로그인 App
    'suriBoard',  # 자유 게시판 app
    'mainframe_app',  # 메인프레임 app
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'suri.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 'DIRS': [os.path.join(BASE_DIR, 'templates')]
        'DIRS': [
                  os.path.join(BASE_DIR, ''),
                  os.path.join(BASE_DIR, 'user_app/template'),
                  os.path.join(BASE_DIR, 'mainframe_app/template'),
                 ]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'suri.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        # 'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        # 'USER': 'root',
        # 'PASSWORD': 'alsghwkr1',
        # 'HO1ST': '127.0.0.1',
        # 'ENGINE': 'django.db.backends.mysql',
        'ENGINE': 'mysql.connector.django',
        'NAME': 'suridb'    ,
        'USER': 'hermel',
        'PASSWORD': 'alsghwkr1',
        'HOST': '25.73.105.176',
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

# STATIC_URL = '/static/'
# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATIC_ROOT = ''
STATIC_URL = '/static/'

# os.path.join 설명
# 해당 OS 형식에 맞도록 입력 받은 경로를 연결합니다. (입력 중간에 절대경로가 나오면 이전에
# 취합된 경로는 제거하고 다시 연결합니다)

# 예시
# os.path.join('C:\\Python30', 'Script', 'test.py')
# 'C:\\Python30\\Script\\test.py'
# os.path.join('C:\\Python30', 'D:\\Test', 'test.py')
# 'D:\\Test\\test.py'

# 참고: http://devanix.tistory.com/298

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)


